{"version":3,"file":"static/7555.2722a4ad.chunk.js","mappings":"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","sources":["webpack://app/../../node_modules/@graphiql/react/dist/foldgutter.es.js"],"sourcesContent":["import { r as requireCodemirror, g as getDefaultExportFromCjs } from \"./codemirror.es2.js\";\nfunction _mergeNamespaces(n, m) {\n  for (var i = 0; i < m.length; i++) {\n    const e = m[i];\n    if (typeof e !== \"string\" && !Array.isArray(e)) {\n      for (const k in e) {\n        if (k !== \"default\" && !(k in n)) {\n          const d = Object.getOwnPropertyDescriptor(e, k);\n          if (d) {\n            Object.defineProperty(n, k, d.get ? d : {\n              enumerable: true,\n              get: () => e[k]\n            });\n          }\n        }\n      }\n    }\n  }\n  return Object.freeze(Object.defineProperty(n, Symbol.toStringTag, { value: \"Module\" }));\n}\nvar foldgutter$2 = { exports: {} };\nvar foldcode = { exports: {} };\nvar hasRequiredFoldcode;\nfunction requireFoldcode() {\n  if (hasRequiredFoldcode) return foldcode.exports;\n  hasRequiredFoldcode = 1;\n  (function(module, exports) {\n    (function(mod) {\n      mod(requireCodemirror());\n    })(function(CodeMirror) {\n      function doFold(cm, pos, options, force) {\n        if (options && options.call) {\n          var finder = options;\n          options = null;\n        } else {\n          var finder = getOption(cm, options, \"rangeFinder\");\n        }\n        if (typeof pos == \"number\") pos = CodeMirror.Pos(pos, 0);\n        var minSize = getOption(cm, options, \"minFoldSize\");\n        function getRange(allowFolded) {\n          var range2 = finder(cm, pos);\n          if (!range2 || range2.to.line - range2.from.line < minSize) return null;\n          if (force === \"fold\") return range2;\n          var marks = cm.findMarksAt(range2.from);\n          for (var i = 0; i < marks.length; ++i) {\n            if (marks[i].__isFold) {\n              if (!allowFolded) return null;\n              range2.cleared = true;\n              marks[i].clear();\n            }\n          }\n          return range2;\n        }\n        var range = getRange(true);\n        if (getOption(cm, options, \"scanUp\")) while (!range && pos.line > cm.firstLine()) {\n          pos = CodeMirror.Pos(pos.line - 1, 0);\n          range = getRange(false);\n        }\n        if (!range || range.cleared || force === \"unfold\") return;\n        var myWidget = makeWidget(cm, options, range);\n        CodeMirror.on(myWidget, \"mousedown\", function(e) {\n          myRange.clear();\n          CodeMirror.e_preventDefault(e);\n        });\n        var myRange = cm.markText(range.from, range.to, {\n          replacedWith: myWidget,\n          clearOnEnter: getOption(cm, options, \"clearOnEnter\"),\n          __isFold: true\n        });\n        myRange.on(\"clear\", function(from, to) {\n          CodeMirror.signal(cm, \"unfold\", cm, from, to);\n        });\n        CodeMirror.signal(cm, \"fold\", cm, range.from, range.to);\n      }\n      function makeWidget(cm, options, range) {\n        var widget = getOption(cm, options, \"widget\");\n        if (typeof widget == \"function\") {\n          widget = widget(range.from, range.to);\n        }\n        if (typeof widget == \"string\") {\n          var text = document.createTextNode(widget);\n          widget = document.createElement(\"span\");\n          widget.appendChild(text);\n          widget.className = \"CodeMirror-foldmarker\";\n        } else if (widget) {\n          widget = widget.cloneNode(true);\n        }\n        return widget;\n      }\n      CodeMirror.newFoldFunction = function(rangeFinder, widget) {\n        return function(cm, pos) {\n          doFold(cm, pos, { rangeFinder, widget });\n        };\n      };\n      CodeMirror.defineExtension(\"foldCode\", function(pos, options, force) {\n        doFold(this, pos, options, force);\n      });\n      CodeMirror.defineExtension(\"isFolded\", function(pos) {\n        var marks = this.findMarksAt(pos);\n        for (var i = 0; i < marks.length; ++i)\n          if (marks[i].__isFold) return true;\n      });\n      CodeMirror.commands.toggleFold = function(cm) {\n        cm.foldCode(cm.getCursor());\n      };\n      CodeMirror.commands.fold = function(cm) {\n        cm.foldCode(cm.getCursor(), null, \"fold\");\n      };\n      CodeMirror.commands.unfold = function(cm) {\n        cm.foldCode(cm.getCursor(), { scanUp: false }, \"unfold\");\n      };\n      CodeMirror.commands.foldAll = function(cm) {\n        cm.operation(function() {\n          for (var i = cm.firstLine(), e = cm.lastLine(); i <= e; i++)\n            cm.foldCode(CodeMirror.Pos(i, 0), { scanUp: false }, \"fold\");\n        });\n      };\n      CodeMirror.commands.unfoldAll = function(cm) {\n        cm.operation(function() {\n          for (var i = cm.firstLine(), e = cm.lastLine(); i <= e; i++)\n            cm.foldCode(CodeMirror.Pos(i, 0), { scanUp: false }, \"unfold\");\n        });\n      };\n      CodeMirror.registerHelper(\"fold\", \"combine\", function() {\n        var funcs = Array.prototype.slice.call(arguments, 0);\n        return function(cm, start) {\n          for (var i = 0; i < funcs.length; ++i) {\n            var found = funcs[i](cm, start);\n            if (found) return found;\n          }\n        };\n      });\n      CodeMirror.registerHelper(\"fold\", \"auto\", function(cm, start) {\n        var helpers = cm.getHelpers(start, \"fold\");\n        for (var i = 0; i < helpers.length; i++) {\n          var cur = helpers[i](cm, start);\n          if (cur) return cur;\n        }\n      });\n      var defaultOptions = {\n        rangeFinder: CodeMirror.fold.auto,\n        widget: \"↔\",\n        minFoldSize: 0,\n        scanUp: false,\n        clearOnEnter: true\n      };\n      CodeMirror.defineOption(\"foldOptions\", null);\n      function getOption(cm, options, name) {\n        if (options && options[name] !== void 0)\n          return options[name];\n        var editorOptions = cm.options.foldOptions;\n        if (editorOptions && editorOptions[name] !== void 0)\n          return editorOptions[name];\n        return defaultOptions[name];\n      }\n      CodeMirror.defineExtension(\"foldOption\", function(options, name) {\n        return getOption(this, options, name);\n      });\n    });\n  })();\n  return foldcode.exports;\n}\n(function(module, exports) {\n  (function(mod) {\n    mod(requireCodemirror(), requireFoldcode());\n  })(function(CodeMirror) {\n    CodeMirror.defineOption(\"foldGutter\", false, function(cm, val, old) {\n      if (old && old != CodeMirror.Init) {\n        cm.clearGutter(cm.state.foldGutter.options.gutter);\n        cm.state.foldGutter = null;\n        cm.off(\"gutterClick\", onGutterClick);\n        cm.off(\"changes\", onChange);\n        cm.off(\"viewportChange\", onViewportChange);\n        cm.off(\"fold\", onFold);\n        cm.off(\"unfold\", onFold);\n        cm.off(\"swapDoc\", onChange);\n      }\n      if (val) {\n        cm.state.foldGutter = new State(parseOptions(val));\n        updateInViewport(cm);\n        cm.on(\"gutterClick\", onGutterClick);\n        cm.on(\"changes\", onChange);\n        cm.on(\"viewportChange\", onViewportChange);\n        cm.on(\"fold\", onFold);\n        cm.on(\"unfold\", onFold);\n        cm.on(\"swapDoc\", onChange);\n      }\n    });\n    var Pos = CodeMirror.Pos;\n    function State(options) {\n      this.options = options;\n      this.from = this.to = 0;\n    }\n    function parseOptions(opts) {\n      if (opts === true) opts = {};\n      if (opts.gutter == null) opts.gutter = \"CodeMirror-foldgutter\";\n      if (opts.indicatorOpen == null) opts.indicatorOpen = \"CodeMirror-foldgutter-open\";\n      if (opts.indicatorFolded == null) opts.indicatorFolded = \"CodeMirror-foldgutter-folded\";\n      return opts;\n    }\n    function isFolded(cm, line) {\n      var marks = cm.findMarks(Pos(line, 0), Pos(line + 1, 0));\n      for (var i = 0; i < marks.length; ++i) {\n        if (marks[i].__isFold) {\n          var fromPos = marks[i].find(-1);\n          if (fromPos && fromPos.line === line)\n            return marks[i];\n        }\n      }\n    }\n    function marker(spec) {\n      if (typeof spec == \"string\") {\n        var elt = document.createElement(\"div\");\n        elt.className = spec + \" CodeMirror-guttermarker-subtle\";\n        return elt;\n      } else {\n        return spec.cloneNode(true);\n      }\n    }\n    function updateFoldInfo(cm, from, to) {\n      var opts = cm.state.foldGutter.options, cur = from - 1;\n      var minSize = cm.foldOption(opts, \"minFoldSize\");\n      var func = cm.foldOption(opts, \"rangeFinder\");\n      var clsFolded = typeof opts.indicatorFolded == \"string\" && classTest(opts.indicatorFolded);\n      var clsOpen = typeof opts.indicatorOpen == \"string\" && classTest(opts.indicatorOpen);\n      cm.eachLine(from, to, function(line) {\n        ++cur;\n        var mark = null;\n        var old = line.gutterMarkers;\n        if (old) old = old[opts.gutter];\n        if (isFolded(cm, cur)) {\n          if (clsFolded && old && clsFolded.test(old.className)) return;\n          mark = marker(opts.indicatorFolded);\n        } else {\n          var pos = Pos(cur, 0);\n          var range = func && func(cm, pos);\n          if (range && range.to.line - range.from.line >= minSize) {\n            if (clsOpen && old && clsOpen.test(old.className)) return;\n            mark = marker(opts.indicatorOpen);\n          }\n        }\n        if (!mark && !old) return;\n        cm.setGutterMarker(line, opts.gutter, mark);\n      });\n    }\n    function classTest(cls) {\n      return new RegExp(\"(^|\\\\s)\" + cls + \"(?:$|\\\\s)\\\\s*\");\n    }\n    function updateInViewport(cm) {\n      var vp = cm.getViewport(), state = cm.state.foldGutter;\n      if (!state) return;\n      cm.operation(function() {\n        updateFoldInfo(cm, vp.from, vp.to);\n      });\n      state.from = vp.from;\n      state.to = vp.to;\n    }\n    function onGutterClick(cm, line, gutter) {\n      var state = cm.state.foldGutter;\n      if (!state) return;\n      var opts = state.options;\n      if (gutter != opts.gutter) return;\n      var folded = isFolded(cm, line);\n      if (folded) folded.clear();\n      else cm.foldCode(Pos(line, 0), opts);\n    }\n    function onChange(cm) {\n      var state = cm.state.foldGutter;\n      if (!state) return;\n      var opts = state.options;\n      state.from = state.to = 0;\n      clearTimeout(state.changeUpdate);\n      state.changeUpdate = setTimeout(function() {\n        updateInViewport(cm);\n      }, opts.foldOnChangeTimeSpan || 600);\n    }\n    function onViewportChange(cm) {\n      var state = cm.state.foldGutter;\n      if (!state) return;\n      var opts = state.options;\n      clearTimeout(state.changeUpdate);\n      state.changeUpdate = setTimeout(function() {\n        var vp = cm.getViewport();\n        if (state.from == state.to || vp.from - state.to > 20 || state.from - vp.to > 20) {\n          updateInViewport(cm);\n        } else {\n          cm.operation(function() {\n            if (vp.from < state.from) {\n              updateFoldInfo(cm, vp.from, state.from);\n              state.from = vp.from;\n            }\n            if (vp.to > state.to) {\n              updateFoldInfo(cm, state.to, vp.to);\n              state.to = vp.to;\n            }\n          });\n        }\n      }, opts.updateViewportTimeSpan || 400);\n    }\n    function onFold(cm, from) {\n      var state = cm.state.foldGutter;\n      if (!state) return;\n      var line = from.line;\n      if (line >= state.from && line < state.to)\n        updateFoldInfo(cm, line, line + 1);\n    }\n  });\n})();\nvar foldgutterExports = foldgutter$2.exports;\nconst foldgutter = /* @__PURE__ */ getDefaultExportFromCjs(foldgutterExports);\nconst foldgutter$1 = /* @__PURE__ */ _mergeNamespaces({\n  __proto__: null,\n  default: foldgutter\n}, [foldgutterExports]);\nexport {\n  foldgutter$1 as f\n};\n//# sourceMappingURL=foldgutter.es.js.map\n"],"names":["_mergeNamespaces","n","m","e","k","d","foldgutter$2","foldcode","hasRequiredFoldcode","requireFoldcode","module","exports","mod","CodeMirror","doFold","cm","pos","options","force","finder","getOption","minSize","getRange","allowFolded","range2","marks","i","range","myWidget","makeWidget","myRange","from","to","widget","text","rangeFinder","funcs","start","found","helpers","cur","defaultOptions","name","editorOptions","val","old","onGutterClick","onChange","onViewportChange","onFold","State","parseOptions","updateInViewport","Pos","opts","isFolded","line","fromPos","marker","spec","elt","updateFoldInfo","func","clsFolded","classTest","clsOpen","mark","cls","vp","state","gutter","folded","foldgutterExports","foldgutter$1"],"sourceRoot":""}