'use strict';

var provider = require('./atlassian/provider.cjs.js');
var provider$9 = require('./auth0/provider.cjs.js');
var provider$3 = require('./aws-alb/provider.cjs.js');
var provider$2 = require('./bitbucket/provider.cjs.js');
var provider$h = require('./cloudflare-access/provider.cjs.js');
var provider$g = require('./gcp-iap/provider.cjs.js');
var provider$d = require('./github/provider.cjs.js');
var provider$c = require('./gitlab/provider.cjs.js');
var provider$e = require('./google/provider.cjs.js');
var provider$8 = require('./microsoft/provider.cjs.js');
var provider$6 = require('./oauth2/provider.cjs.js');
var provider$f = require('./oauth2-proxy/provider.cjs.js');
var provider$5 = require('./oidc/provider.cjs.js');
var provider$a = require('./okta/provider.cjs.js');
var provider$4 = require('./onelogin/provider.cjs.js');
var provider$b = require('./saml/provider.cjs.js');
var provider$1 = require('./bitbucketServer/provider.cjs.js');
var provider$7 = require('./azure-easyauth/provider.cjs.js');

const providers = Object.freeze({
  atlassian: provider.atlassian,
  auth0: provider$9.auth0,
  awsAlb: provider$3.awsAlb,
  bitbucket: provider$2.bitbucket,
  bitbucketServer: provider$1.bitbucketServer,
  cfAccess: provider$h.cfAccess,
  gcpIap: provider$g.gcpIap,
  github: provider$d.github,
  gitlab: provider$c.gitlab,
  google: provider$e.google,
  microsoft: provider$8.microsoft,
  oauth2: provider$6.oauth2,
  oauth2Proxy: provider$f.oauth2Proxy,
  oidc: provider$5.oidc,
  okta: provider$a.okta,
  onelogin: provider$4.onelogin,
  saml: provider$b.saml,
  easyAuth: provider$7.easyAuth
});
const defaultAuthProviderFactories = {
  google: provider$e.google.create(),
  github: provider$d.github.create(),
  gitlab: provider$c.gitlab.create(),
  saml: provider$b.saml.create(),
  okta: provider$a.okta.create(),
  auth0: provider$9.auth0.create(),
  microsoft: provider$8.microsoft.create(),
  easyAuth: provider$7.easyAuth.create(),
  oauth2: provider$6.oauth2.create(),
  oidc: provider$5.oidc.create(),
  onelogin: provider$4.onelogin.create(),
  awsalb: provider$3.awsAlb.create(),
  bitbucket: provider$2.bitbucket.create(),
  bitbucketServer: provider$1.bitbucketServer.create(),
  atlassian: provider.atlassian.create()
};

exports.defaultAuthProviderFactories = defaultAuthProviderFactories;
exports.providers = providers;
//# sourceMappingURL=providers.cjs.js.map
