{"version":3,"file":"static/485.09e79c1a.chunk.js","mappings":"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","sources":["webpack://app/../../node_modules/@graphiql/react/dist/searchcursor.es.js","webpack://app/../../node_modules/@graphiql/react/dist/searchcursor.es2.js"],"sourcesContent":["import { g as getDefaultExportFromCjs } from \"./codemirror.es2.js\";\nimport { r as requireSearchcursor } from \"./searchcursor.es2.js\";\nfunction _mergeNamespaces(n, m) {\n  for (var i = 0; i < m.length; i++) {\n    const e = m[i];\n    if (typeof e !== \"string\" && !Array.isArray(e)) {\n      for (const k in e) {\n        if (k !== \"default\" && !(k in n)) {\n          const d = Object.getOwnPropertyDescriptor(e, k);\n          if (d) {\n            Object.defineProperty(n, k, d.get ? d : {\n              enumerable: true,\n              get: () => e[k]\n            });\n          }\n        }\n      }\n    }\n  }\n  return Object.freeze(Object.defineProperty(n, Symbol.toStringTag, { value: \"Module\" }));\n}\nvar searchcursorExports = requireSearchcursor();\nconst searchcursor = /* @__PURE__ */ getDefaultExportFromCjs(searchcursorExports);\nconst searchcursor$1 = /* @__PURE__ */ _mergeNamespaces({\n  __proto__: null,\n  default: searchcursor\n}, [searchcursorExports]);\nexport {\n  searchcursor$1 as s\n};\n//# sourceMappingURL=searchcursor.es.js.map\n","import { r as requireCodemirror } from \"./codemirror.es2.js\";\nvar searchcursor = { exports: {} };\nvar hasRequiredSearchcursor;\nfunction requireSearchcursor() {\n  if (hasRequiredSearchcursor) return searchcursor.exports;\n  hasRequiredSearchcursor = 1;\n  (function(module, exports) {\n    (function(mod) {\n      mod(requireCodemirror());\n    })(function(CodeMirror) {\n      var Pos = CodeMirror.Pos;\n      function regexpFlags(regexp) {\n        var flags = regexp.flags;\n        return flags != null ? flags : (regexp.ignoreCase ? \"i\" : \"\") + (regexp.global ? \"g\" : \"\") + (regexp.multiline ? \"m\" : \"\");\n      }\n      function ensureFlags(regexp, flags) {\n        var current = regexpFlags(regexp), target = current;\n        for (var i = 0; i < flags.length; i++) if (target.indexOf(flags.charAt(i)) == -1)\n          target += flags.charAt(i);\n        return current == target ? regexp : new RegExp(regexp.source, target);\n      }\n      function maybeMultiline(regexp) {\n        return /\\\\s|\\\\n|\\n|\\\\W|\\\\D|\\[\\^/.test(regexp.source);\n      }\n      function searchRegexpForward(doc, regexp, start) {\n        regexp = ensureFlags(regexp, \"g\");\n        for (var line = start.line, ch = start.ch, last = doc.lastLine(); line <= last; line++, ch = 0) {\n          regexp.lastIndex = ch;\n          var string = doc.getLine(line), match = regexp.exec(string);\n          if (match)\n            return {\n              from: Pos(line, match.index),\n              to: Pos(line, match.index + match[0].length),\n              match\n            };\n        }\n      }\n      function searchRegexpForwardMultiline(doc, regexp, start) {\n        if (!maybeMultiline(regexp)) return searchRegexpForward(doc, regexp, start);\n        regexp = ensureFlags(regexp, \"gm\");\n        var string, chunk = 1;\n        for (var line = start.line, last = doc.lastLine(); line <= last; ) {\n          for (var i = 0; i < chunk; i++) {\n            if (line > last) break;\n            var curLine = doc.getLine(line++);\n            string = string == null ? curLine : string + \"\\n\" + curLine;\n          }\n          chunk = chunk * 2;\n          regexp.lastIndex = start.ch;\n          var match = regexp.exec(string);\n          if (match) {\n            var before = string.slice(0, match.index).split(\"\\n\"), inside = match[0].split(\"\\n\");\n            var startLine = start.line + before.length - 1, startCh = before[before.length - 1].length;\n            return {\n              from: Pos(startLine, startCh),\n              to: Pos(\n                startLine + inside.length - 1,\n                inside.length == 1 ? startCh + inside[0].length : inside[inside.length - 1].length\n              ),\n              match\n            };\n          }\n        }\n      }\n      function lastMatchIn(string, regexp, endMargin) {\n        var match, from = 0;\n        while (from <= string.length) {\n          regexp.lastIndex = from;\n          var newMatch = regexp.exec(string);\n          if (!newMatch) break;\n          var end = newMatch.index + newMatch[0].length;\n          if (end > string.length - endMargin) break;\n          if (!match || end > match.index + match[0].length)\n            match = newMatch;\n          from = newMatch.index + 1;\n        }\n        return match;\n      }\n      function searchRegexpBackward(doc, regexp, start) {\n        regexp = ensureFlags(regexp, \"g\");\n        for (var line = start.line, ch = start.ch, first = doc.firstLine(); line >= first; line--, ch = -1) {\n          var string = doc.getLine(line);\n          var match = lastMatchIn(string, regexp, ch < 0 ? 0 : string.length - ch);\n          if (match)\n            return {\n              from: Pos(line, match.index),\n              to: Pos(line, match.index + match[0].length),\n              match\n            };\n        }\n      }\n      function searchRegexpBackwardMultiline(doc, regexp, start) {\n        if (!maybeMultiline(regexp)) return searchRegexpBackward(doc, regexp, start);\n        regexp = ensureFlags(regexp, \"gm\");\n        var string, chunkSize = 1, endMargin = doc.getLine(start.line).length - start.ch;\n        for (var line = start.line, first = doc.firstLine(); line >= first; ) {\n          for (var i = 0; i < chunkSize && line >= first; i++) {\n            var curLine = doc.getLine(line--);\n            string = string == null ? curLine : curLine + \"\\n\" + string;\n          }\n          chunkSize *= 2;\n          var match = lastMatchIn(string, regexp, endMargin);\n          if (match) {\n            var before = string.slice(0, match.index).split(\"\\n\"), inside = match[0].split(\"\\n\");\n            var startLine = line + before.length, startCh = before[before.length - 1].length;\n            return {\n              from: Pos(startLine, startCh),\n              to: Pos(\n                startLine + inside.length - 1,\n                inside.length == 1 ? startCh + inside[0].length : inside[inside.length - 1].length\n              ),\n              match\n            };\n          }\n        }\n      }\n      var doFold, noFold;\n      if (String.prototype.normalize) {\n        doFold = function(str) {\n          return str.normalize(\"NFD\").toLowerCase();\n        };\n        noFold = function(str) {\n          return str.normalize(\"NFD\");\n        };\n      } else {\n        doFold = function(str) {\n          return str.toLowerCase();\n        };\n        noFold = function(str) {\n          return str;\n        };\n      }\n      function adjustPos(orig, folded, pos, foldFunc) {\n        if (orig.length == folded.length) return pos;\n        for (var min = 0, max = pos + Math.max(0, orig.length - folded.length); ; ) {\n          if (min == max) return min;\n          var mid = min + max >> 1;\n          var len = foldFunc(orig.slice(0, mid)).length;\n          if (len == pos) return mid;\n          else if (len > pos) max = mid;\n          else min = mid + 1;\n        }\n      }\n      function searchStringForward(doc, query, start, caseFold) {\n        if (!query.length) return null;\n        var fold = caseFold ? doFold : noFold;\n        var lines = fold(query).split(/\\r|\\n\\r?/);\n        search: for (var line = start.line, ch = start.ch, last = doc.lastLine() + 1 - lines.length; line <= last; line++, ch = 0) {\n          var orig = doc.getLine(line).slice(ch), string = fold(orig);\n          if (lines.length == 1) {\n            var found = string.indexOf(lines[0]);\n            if (found == -1) continue search;\n            var start = adjustPos(orig, string, found, fold) + ch;\n            return {\n              from: Pos(line, adjustPos(orig, string, found, fold) + ch),\n              to: Pos(line, adjustPos(orig, string, found + lines[0].length, fold) + ch)\n            };\n          } else {\n            var cutFrom = string.length - lines[0].length;\n            if (string.slice(cutFrom) != lines[0]) continue search;\n            for (var i = 1; i < lines.length - 1; i++)\n              if (fold(doc.getLine(line + i)) != lines[i]) continue search;\n            var end = doc.getLine(line + lines.length - 1), endString = fold(end), lastLine = lines[lines.length - 1];\n            if (endString.slice(0, lastLine.length) != lastLine) continue search;\n            return {\n              from: Pos(line, adjustPos(orig, string, cutFrom, fold) + ch),\n              to: Pos(line + lines.length - 1, adjustPos(end, endString, lastLine.length, fold))\n            };\n          }\n        }\n      }\n      function searchStringBackward(doc, query, start, caseFold) {\n        if (!query.length) return null;\n        var fold = caseFold ? doFold : noFold;\n        var lines = fold(query).split(/\\r|\\n\\r?/);\n        search: for (var line = start.line, ch = start.ch, first = doc.firstLine() - 1 + lines.length; line >= first; line--, ch = -1) {\n          var orig = doc.getLine(line);\n          if (ch > -1) orig = orig.slice(0, ch);\n          var string = fold(orig);\n          if (lines.length == 1) {\n            var found = string.lastIndexOf(lines[0]);\n            if (found == -1) continue search;\n            return {\n              from: Pos(line, adjustPos(orig, string, found, fold)),\n              to: Pos(line, adjustPos(orig, string, found + lines[0].length, fold))\n            };\n          } else {\n            var lastLine = lines[lines.length - 1];\n            if (string.slice(0, lastLine.length) != lastLine) continue search;\n            for (var i = 1, start = line - lines.length + 1; i < lines.length - 1; i++)\n              if (fold(doc.getLine(start + i)) != lines[i]) continue search;\n            var top = doc.getLine(line + 1 - lines.length), topString = fold(top);\n            if (topString.slice(topString.length - lines[0].length) != lines[0]) continue search;\n            return {\n              from: Pos(line + 1 - lines.length, adjustPos(top, topString, top.length - lines[0].length, fold)),\n              to: Pos(line, adjustPos(orig, string, lastLine.length, fold))\n            };\n          }\n        }\n      }\n      function SearchCursor(doc, query, pos, options) {\n        this.atOccurrence = false;\n        this.afterEmptyMatch = false;\n        this.doc = doc;\n        pos = pos ? doc.clipPos(pos) : Pos(0, 0);\n        this.pos = { from: pos, to: pos };\n        var caseFold;\n        if (typeof options == \"object\") {\n          caseFold = options.caseFold;\n        } else {\n          caseFold = options;\n          options = null;\n        }\n        if (typeof query == \"string\") {\n          if (caseFold == null) caseFold = false;\n          this.matches = function(reverse, pos2) {\n            return (reverse ? searchStringBackward : searchStringForward)(doc, query, pos2, caseFold);\n          };\n        } else {\n          query = ensureFlags(query, \"gm\");\n          if (!options || options.multiline !== false)\n            this.matches = function(reverse, pos2) {\n              return (reverse ? searchRegexpBackwardMultiline : searchRegexpForwardMultiline)(doc, query, pos2);\n            };\n          else\n            this.matches = function(reverse, pos2) {\n              return (reverse ? searchRegexpBackward : searchRegexpForward)(doc, query, pos2);\n            };\n        }\n      }\n      SearchCursor.prototype = {\n        findNext: function() {\n          return this.find(false);\n        },\n        findPrevious: function() {\n          return this.find(true);\n        },\n        find: function(reverse) {\n          var head = this.doc.clipPos(reverse ? this.pos.from : this.pos.to);\n          if (this.afterEmptyMatch && this.atOccurrence) {\n            head = Pos(head.line, head.ch);\n            if (reverse) {\n              head.ch--;\n              if (head.ch < 0) {\n                head.line--;\n                head.ch = (this.doc.getLine(head.line) || \"\").length;\n              }\n            } else {\n              head.ch++;\n              if (head.ch > (this.doc.getLine(head.line) || \"\").length) {\n                head.ch = 0;\n                head.line++;\n              }\n            }\n            if (CodeMirror.cmpPos(head, this.doc.clipPos(head)) != 0) {\n              return this.atOccurrence = false;\n            }\n          }\n          var result = this.matches(reverse, head);\n          this.afterEmptyMatch = result && CodeMirror.cmpPos(result.from, result.to) == 0;\n          if (result) {\n            this.pos = result;\n            this.atOccurrence = true;\n            return this.pos.match || true;\n          } else {\n            var end = Pos(reverse ? this.doc.firstLine() : this.doc.lastLine() + 1, 0);\n            this.pos = { from: end, to: end };\n            return this.atOccurrence = false;\n          }\n        },\n        from: function() {\n          if (this.atOccurrence) return this.pos.from;\n        },\n        to: function() {\n          if (this.atOccurrence) return this.pos.to;\n        },\n        replace: function(newText, origin) {\n          if (!this.atOccurrence) return;\n          var lines = CodeMirror.splitLines(newText);\n          this.doc.replaceRange(lines, this.pos.from, this.pos.to, origin);\n          this.pos.to = Pos(\n            this.pos.from.line + lines.length - 1,\n            lines[lines.length - 1].length + (lines.length == 1 ? this.pos.from.ch : 0)\n          );\n        }\n      };\n      CodeMirror.defineExtension(\"getSearchCursor\", function(query, pos, caseFold) {\n        return new SearchCursor(this.doc, query, pos, caseFold);\n      });\n      CodeMirror.defineDocExtension(\"getSearchCursor\", function(query, pos, caseFold) {\n        return new SearchCursor(this, query, pos, caseFold);\n      });\n      CodeMirror.defineExtension(\"selectMatches\", function(query, caseFold) {\n        var ranges = [];\n        var cur = this.getSearchCursor(query, this.getCursor(\"from\"), caseFold);\n        while (cur.findNext()) {\n          if (CodeMirror.cmpPos(cur.to(), this.getCursor(\"to\")) > 0) break;\n          ranges.push({ anchor: cur.from(), head: cur.to() });\n        }\n        if (ranges.length)\n          this.setSelections(ranges, 0);\n      });\n    });\n  })();\n  return searchcursor.exports;\n}\nexport {\n  requireSearchcursor as r\n};\n//# sourceMappingURL=searchcursor.es2.js.map\n"],"names":["_mergeNamespaces","n","m","i","e","k","d","searchcursorExports","searchcursor$1","searchcursor","hasRequiredSearchcursor","requireSearchcursor","module","exports","mod","CodeMirror","Pos","regexpFlags","regexp","flags","ensureFlags","current","target","maybeMultiline","searchRegexpForward","doc","start","line","ch","last","string","match","searchRegexpForwardMultiline","chunk","curLine","before","inside","startLine","startCh","lastMatchIn","endMargin","from","newMatch","end","searchRegexpBackward","first","searchRegexpBackwardMultiline","chunkSize","doFold","noFold","str","adjustPos","orig","folded","pos","foldFunc","min","max","mid","len","searchStringForward","query","caseFold","fold","lines","search","found","cutFrom","endString","lastLine","searchStringBackward","top","topString","SearchCursor","options","reverse","pos2","head","result","newText","origin","ranges","cur"],"sourceRoot":""}